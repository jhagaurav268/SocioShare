//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class UploadUrlResponse {

	public class Headers {
		public String media_type_family {get;set;} // in json: media-type-family

		public Headers(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'media-type-family') {
							media_type_family = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Headers consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest {
		public String uploadUrl {get;set;} 
		public Headers headers {get;set;} 

		public Com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'uploadUrl') {
							uploadUrl = parser.getText();
						} else if (text == 'headers') {
							headers = new Headers(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class UploadMechanism {
		public Com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest {get;set;} // in json: com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest

		public UploadMechanism(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'com.linkedin.digitalmedia.uploading.MediaUploadHttpRequest') {
							com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest = new Com_linkedin_digitalmedia_uploading_MediaUploadHttpRequest(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'UploadMechanism consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Value {
		public String mediaArtifact {get;set;} 
		public UploadMechanism uploadMechanism {get;set;} 
		public String asset {get;set;} 
		public String assetRealTimeTopic {get;set;} 

		public Value(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'mediaArtifact') {
							mediaArtifact = parser.getText();
						} else if (text == 'uploadMechanism') {
							uploadMechanism = new UploadMechanism(parser);
						} else if (text == 'asset') {
							asset = parser.getText();
						} else if (text == 'assetRealTimeTopic') {
							assetRealTimeTopic = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Value consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Value value {get;set;} 

	public UploadUrlResponse(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'value') {
						value = new Value(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'UploadUrlResponse consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	
	public static UploadUrlResponse parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new UploadUrlResponse(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}

}